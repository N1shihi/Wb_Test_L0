version: '3.8'

services:
  postgres:
    image: postgres:17
    container_name: pg_orders
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin1234
      POSTGRES_DB: orders_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/migrations:/migrations
    networks:
      - appnet

  migrate:
    image: migrate/migrate
    container_name: migrate_orders
    depends_on:
      - postgres
    volumes:
      - ./db/migrations:/migrations
    command:
      [
        "-path", "/migrations",
        "-database", "postgres://admin:admin1234@postgres:5432/orders_db?sslmode=disable",
        "up"
      ]
    networks:
      - appnet

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_NUM_PARTITIONS=1
      - ALLOW_PLAINTEXT_LISTENER=yes
    networks:
      - appnet

  order_service:
    build:
      context: .
      dockerfile: Dockerfile.server
    container_name: order_service
    depends_on:
      - postgres
      - kafka-ui
      - kafka
      - migrate
    environment:
      - CONFIG_PATH=/app/config.yaml
    ports:
      - "8080:8080"
    networks:
      - appnet
    restart: unless-stopped

  order_producer:
    build:
      context: .
      dockerfile: Dockerfile.producer
    container_name: order_producer
    depends_on:
      - kafka
      - kafka-ui
      - postgres
    environment:
      - CONFIG_PATH=/app/config.yaml
    networks:
      - appnet
    restart: "no"
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka_ui
    depends_on:
      - kafka
    ports:
      - "8081:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    networks:
      - appnet
volumes:
  postgres_data:

networks:
  appnet:
